{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenAPIWeb Demo",
    "description": "Application to showcase OpenAPI Spec Please consider using later version for new development.",
    "termsOfService": "https://www.keefegroup.com/home/terms-conditions-108",
    "contact": {
      "name": "COL Team",
      "url": "https://www.keefegroup.com/home/contact-us-105",
      "email": "CommissaryOnline@keefegroup.com"
    },
    "license": {
      "name": "License Keefe Group",
      "url": "https://www.keefegroup.com/"
    },
    "version": "1.0"
  },
  "paths": {
    "/NoVersion": {
      "get": {
        "tags": [
          "NoVersion"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/TestConvention": {
      "get": {
        "tags": [
          "TestConvention"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/1/TestVersion": {
      "get": {
        "tags": [
          "TestVersion"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TestVersion"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/1/TestVersion/{id}": {
      "get": {
        "tags": [
          "TestVersion"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "TestVersion"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "TestVersion"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/Values": {
      "get": {
        "tags": [
          "Values"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Values"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OpenApiWeb.ValuesModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OpenApiWeb.ValuesModel"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/WeatherForecast/{city}": {
      "get": {
        "tags": [
          "WeatherForecast"
        ],
        "summary": "Gets forecast for all the cities",
        "operationId": "GetByCity",
        "parameters": [
          {
            "name": "city",
            "in": "path",
            "description": "City where you want the forecast for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the weather for the city",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OpenApiWeb.WeatherForecast"
                  }
                }
              }
            }
          },
          "404": {
            "description": "If the city not matched",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/WeatherForecast/{city}/{zip}": {
      "get": {
        "tags": [
          "WeatherForecast"
        ],
        "operationId": "GetByCityZip",
        "parameters": [
          {
            "name": "city",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "zip",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/WeatherForecast/{city}/extended": {
      "get": {
        "tags": [
          "WeatherForecast"
        ],
        "operationId": "GetByCityExtended",
        "parameters": [
          {
            "name": "city",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OpenApiWeb.WeatherForecastExtended"
                }
              }
            }
          }
        }
      }
    },
    "/WeatherForecast/{city}/provider/{provider}": {
      "get": {
        "tags": [
          "WeatherForecast"
        ],
        "operationId": "GetByCityAndProvider",
        "parameters": [
          {
            "name": "city",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "provider",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OpenApiWeb.WeatherForecast"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Microsoft.AspNetCore.Mvc.ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "Microsoft.AspNetCore.Mvc.ValidationProblemDetails": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
          }
        ],
        "properties": {
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": { }
      },
      "OpenApiWeb.Forecast": {
        "enum": [
          "RANDOM",
          "PROPABLE",
          "ACCURATE"
        ],
        "type": "string",
        "description": "Accuracy of weather forecast prediction"
      },
      "OpenApiWeb.ValuesModel": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "zip": {
            "maximum": 7000,
            "minimum": 6000,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "OpenApiWeb.WeatherForecast": {
        "required": [
          "city"
        ],
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "description": "Weather Forecast Date",
            "format": "date",
            "example": "12/12/2021"
          },
          "temperatureC": {
            "type": "integer",
            "description": "Temperature in Celcius",
            "format": "int32",
            "example": 30
          },
          "temperatureF": {
            "type": "integer",
            "description": "Temperature in Fahrenheit",
            "format": "int32",
            "readOnly": true,
            "example": -1
          },
          "summary": {
            "type": "string",
            "description": "Description of weather forecast",
            "nullable": true,
            "example": "Mostly sunny"
          },
          "city": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "description": "The name of the city",
            "example": "St. Louis"
          },
          "forecastAccuracy": {
            "$ref": "#/components/schemas/OpenApiWeb.Forecast"
          }
        },
        "additionalProperties": false
      },
      "OpenApiWeb.WeatherForecastExtended": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/OpenApiWeb.WeatherForecast"
          }
        ],
        "properties": {
          "next7Days": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OpenApiWeb.WeatherForecastFox": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/OpenApiWeb.WeatherForecast"
          }
        ],
        "properties": {
          "summary": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OpenApiWeb.WeatherForecastNBC": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/OpenApiWeb.WeatherForecast"
          }
        ],
        "properties": {
          "summary": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  },
  "tags": [
    {
      "name": "Values",
      "description": "Get values using this API. Demo exceptions"
    },
    {
      "name": "WeatherForecast",
      "description": "Get weather details using this API"
    }
  ]
}